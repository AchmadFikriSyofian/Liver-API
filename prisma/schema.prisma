// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id           Int           @id @default(autoincrement())
  name         String?
  email        String        @unique
  password     String
  no_hp        String?
  is_admin     Boolean       @default(false)
  city         String?
  country      String?
  foto_profile String?
  is_active    Boolean       @default(false)
  enrollment   Enrollments[]
  otp          Otp[]
}

model Otp {
  id        Int      @id @default(autoincrement())
  kode_otp  String   @unique
  user_id   Int
  expiredAt DateTime
  user      Users    @relation(fields: [user_id], references: [id])
}

model Categories {
  id     Int                   @id @default(autoincrement())
  name   String
  image  String?
  course CategoriesOnCourses[]
}

model Mentors {
  id     Int                @id @default(autoincrement())
  name   String
  course MentorsOnCourses[]
}

model Courses {
  id          Int                   @id @default(autoincrement())
  name        String
  desc        String
  price       String
  level       Level
  type        Type                  @default(isFree)
  image       String?
  rating      Int
  createdAt   DateTime              @default(now())
  category    CategoriesOnCourses[]
  chapter     Chapters[]
  coursePromo CoursePromos[]
  enrollment  Enrollments[]
  mentor      MentorsOnCourses[]
}

model MentorsOnCourses {
  mentor_id  Int
  course_id  Int
  assignedAt DateTime @default(now())
  course     Courses  @relation(fields: [course_id], references: [id])
  mentor     Mentors  @relation(fields: [mentor_id], references: [id])

  @@id([mentor_id, course_id])
}

model CategoriesOnCourses {
  category_id Int
  course_id   Int
  category    Categories @relation(fields: [category_id], references: [id])
  course      Courses    @relation(fields: [course_id], references: [id])

  @@id([category_id, course_id])
}

model Chapters {
  id                Int       @id @default(autoincrement())
  name              String
  course_id_chapter Int
  course            Courses   @relation(fields: [course_id_chapter], references: [id])
  lesson            Lessons[]
}

model Lessons {
  id         Int      @id @default(autoincrement())
  name       String
  video      String
  desc       String
  duration   Int
  chapter_id Int
  chapter    Chapters @relation(fields: [chapter_id], references: [id])
}

model Enrollments {
  id                    Int     @id @default(autoincrement())
  course_id_enrollment  Int
  card_number           Int
  name                  String
  VCC                   Int
  payment               String
  createdAt             DateTime @default(now())
  user_id               Int
  course                Courses @relation(fields: [course_id_enrollment], references: [id])
  user                  Users   @relation(fields: [user_id], references: [id])
}

model CoursePromos {
  id                  Int      @id @default(autoincrement())
  promo_code          String   @unique
  discount_percentage Int
  start_date          DateTime
  end_date            DateTime
  course_id_promo     Int
  course              Courses  @relation(fields: [course_id_promo], references: [id])
}

enum Type {
  isFree
  isPremium
}

enum Level {
  Beginner
  Intermediate
  Advanced
}